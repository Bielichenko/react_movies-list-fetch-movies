{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","href","imdbUrl","MoviesList","movies","map","imdbID","FindMovie","setSelectedMovie","useState","input","setInput","isLoading","setIsLoading","setMovie","error","setError","sendRequest","event","a","preventDefault","query","fetch","then","res","json","catch","Response","Error","movieFromServer","htmlFor","type","id","placeholder","value","onChange","target","classNames","onClick","disabled","App","setMovies","selectedMovie","useEffect","some","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ca10460.chunk.js","sourcesContent":["import React from 'react';\nimport { MovieData } from '../../types/MovieData';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: MovieData,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.Poster}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.Title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.Plot}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  movies: MovieData[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbID}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport { getMovie } from '../../api';\nimport './FindMovie.scss';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  setSelectedMovie: (movie: MovieData) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ setSelectedMovie }) => {\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [movie, setMovie] = useState<MovieData | null>(null);\n  const [error, setError] = useState<boolean>(false);\n\n  const sendRequest = async (event: React.FormEvent) => {\n    event.preventDefault();\n    setIsLoading(true);\n    const movieFromServer = await getMovie(input);\n\n    if ('Error' in movieFromServer) {\n      setError(true);\n    } else {\n      setMovie({\n        Poster: movieFromServer.Poster === 'N/A'\n          ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n          : movieFromServer.Poster,\n        Title: movieFromServer.Title,\n        Plot: movieFromServer.Plot,\n        imdbID: movieFromServer.imdbID,\n        imdbUrl: `https://www.imdb.com/title/${movieFromServer.imdbID}/`,\n      });\n    }\n\n    setIsLoading(false);\n  };\n\n  const addFilmHandler = () => {\n    if (movie) {\n      setSelectedMovie(movie);\n    }\n\n    setInput('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={input}\n              onChange={(event) => setInput(event.target.value)}\n            />\n          </div>\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            {input\n              ? (\n                <button\n                  data-cy=\"searchButton\"\n                  type=\"submit\"\n                  className={classNames(\n                    'button', 'is-light', { 'is-loading': isLoading },\n                  )}\n                  onClick={(event) => sendRequest(event)}\n                >\n                  Find a movie\n                </button>\n              )\n              : (\n                <button\n                  data-cy=\"searchButton\"\n                  type=\"submit\"\n                  className=\"button is-light is-Loading\"\n                  disabled\n                >\n                  Find a movie\n                </button>\n              )}\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => addFilmHandler()}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=a6296849';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useEffect, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { MovieData } from './types/MovieData';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<MovieData[]>([]);\n  const [selectedMovie, setSelectedMovie] = useState<MovieData | null>(null);\n\n  useEffect(() => {\n    if (selectedMovie\n      && !movies.some(movie => movie.imdbID === selectedMovie.imdbID)) {\n      movies.push(selectedMovie);\n\n      setMovies([...movies]);\n    }\n  }, [selectedMovie]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie setSelectedMovie={setSelectedMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}